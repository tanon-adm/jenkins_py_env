def Init() {
    core = load 'core.groovy'
}

pipeline {
    agent any
    stages {
        stage('Init') { steps { script { Init() } } }
        
        stage('Stage 1') { 
            steps { 
                catchError(stageResult: 'FAILURE') {
                    script {
                        echo 'stage 1'
                    
                    } 
                } 
            }
        }
        stage('Stage 2') { 
            steps { 
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    script {
                        echo 'stage 2'
                        core.failBuild()
                    } 
                } 
            }
        }
        stage('Stage 3') { 
            steps {
                catchError(stageResult: 'FAILURE') {
                    script {
                        echo 'stage 3'
                    
                    } 
                } 
            }
        }
        stage('Stage 4') { 
            steps { 
                script {
                    echo 'stage 4'
                    if (currentBuild.result == 'FAILURE') {
                        error("${currentBuild.description}")
                    }
                } 
            } 
        }
        stage('Stage 5') { 
            steps { 
                script {
                    echo 'stage 5'
                } 
            } 
        }
    }
}
